/*
  File:        GrammarDatabase.java-template
  Author:      Sternberg
  Date:
  Description: Text tools transform this file into GrammarDatabase.java,
               which holds info on grammars, and controls access to them.
*/

import java.util.*;

/** Holds information on grammars, and controls access to them. 
 *  <P>
 *  Expands to include new grammars the user defines in the CloneGrammarDialog.
*/
public class GrammarDatabase
{
    static protected Vector m_rep; // Only derived classes should touch this.
    static
    {
        m_rep = new Vector();

// Here we use text tools to insert grammars from grammars.dat.
// Do not edit the next two lines!!!
// -- addElements starting here
// -- end of addElements section

    }

    /** Returns a copy of the indicated element. */
    public static Grammar elementAt( int i )
    {
        return new Grammar( (Grammar)(m_rep.elementAt(i)) );
    }

    /** Find the Grammar whose name matches arg gram_name. */
    public static Grammar elementAt( String gram_name )
    {
        int i=0;
        while( (! gram_name.equals(((Grammar)(m_rep.elementAt(i))).name))
        &&     ( i < m_rep.size() ) )
        {
            i++;
        }
        
        if( i < m_rep.size() )
        {
            return (Grammar)m_rep.elementAt(i);
        }
        else
        {
            return null;  // Should never get here.
        }
    }            

    /** Number of elements. */
    public static int size()
    {
        return m_rep.size();
    }

    /** Add to the database. */
    public static void append( Grammar g )
    {
        m_rep.addElement( g );
    }

    /** Returns index of first occurence of the argument, using its
     *  class' equals() method.  If not found, returns -1.
    */
    public static int indexOf( Grammar g )
    {
        return m_rep.indexOf( g );
    }
}
